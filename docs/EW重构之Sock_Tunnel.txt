Sock_Tunnel.h

#define TUNNEL_INIT_OK                           1
#define TUNNEL_INIT_FALSE                        0
#define TUNNEL_CLEAN_OK                          1
#define TUNNEL_CLEAN_FALSE                       0
#define TUNNEL_CLOSE_OK                          1
#define TUNNEL_CLOSE_FALSE                       0
#define TUNNEL_GET_POOL_ID_FALSE                -1
#define TUNNEL_GET_FIRST_POOL_ID_FALSE          -1
#define TUNNEL_SET_SECOND_POOL_AND_RUN_IT_OK     1
#define TUNNEL_SET_SECOND_POOL_AND_RUN_IT_FALSE -1
#define TUNNEL_SOCK_TO_SOCK_OK                   1
#define TUNNEL_SOCK_TO_SOCK_ERROR               -1


		int tunn_init_Pool()
			#define TUNNEL_INIT_OK     1
			#define TUNNEL_INIT_FALSE  0
		int tunn_clean(int num)
			#define TUNNEL_CLEAN_OK    1
			#define TUNNEL_CLEAN_FALSE 0
		int tunn_close(int num)
			#define TUNNEL_CLOSE_OK    1
			#define TUNNEL_CLOSE_FALSE 0
		void * tunn_run_now(void *p_num)

		int tunn_get_pool_id_and_lock_it()
			#define TUNNEL_GET_POOL_ID_FALSE  -1
			//  当返回不为错误时，为POOL 的游标。
		int tunn_set_first_pool_and_lock_it(int sock,int usec)
			#define TUNNEL_GET_FIRST_POOL_ID_FALSE  -1
			//  当返回不为错误时，为POOL 的游标。
		int tunn_set_second_pool_and_run_it(int pool_num,int sock)
			#define TUNNEL_SET_SECOND_POOL_AND_RUN_IT_OK     1
			#define TUNNEL_SET_SECOND_POOL_AND_RUN_IT_FALSE -1
		int tunn_sock_to_sock(int from_sock,int to_sock,int usec)
			#define TUNNEL_SOCK_TO_SOCK_OK  1
			#define TUNNEL_SOCK_TO_SOCK_ERROR -1